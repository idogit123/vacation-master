import { ISessionDocumentDeleteTimeSeriesBase } from "./ISessionDocumentDeleteTimeSeriesBase";
import { TimeSeriesEntry } from "./TimeSeries/TimeSeriesEntry";
import { ITimeSeriesIncludeBuilder } from "./Loaders/ITimeSeriesIncludeBuilder";
export interface ISessionDocumentIncrementalTimeSeries extends ISessionDocumentDeleteTimeSeriesBase {
    get(): Promise<TimeSeriesEntry[]>;
    get(start: number, pageSize: number): Promise<TimeSeriesEntry[]>;
    get(from: Date, to: Date): Promise<TimeSeriesEntry[]>;
    get(from: Date, to: Date, start: number): Promise<TimeSeriesEntry[]>;
    get(from: Date, to: Date, start: number, pageSize: number): Promise<TimeSeriesEntry[]>;
    get(from: Date, to: Date, includes: (includeBuilder: ITimeSeriesIncludeBuilder) => void): Promise<TimeSeriesEntry[]>;
    get(from: Date, to: Date, includes: (includeBuilder: ITimeSeriesIncludeBuilder) => void, start: number): Promise<TimeSeriesEntry[]>;
    get(from: Date, to: Date, includes: (includeBuilder: ITimeSeriesIncludeBuilder) => void, start: number, pageSize: number): Promise<TimeSeriesEntry[]>;
    increment(timestamp: Date, values: number[]): void;
    increment(values: number[]): void;
    increment(timestamp: Date, value: number): void;
    increment(value: number): void;
}
