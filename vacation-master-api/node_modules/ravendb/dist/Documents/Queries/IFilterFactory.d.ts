import { MethodCall } from "../Session/MethodCall";
import { WhereParams } from "../Session/WhereParams";
export interface IFilterFactory<T> {
    equals(fieldName: string, value: any): IFilterFactory<T>;
    equals(fieldName: string, method: MethodCall): IFilterFactory<T>;
    equals(whereParams: WhereParams): IFilterFactory<T>;
    notEquals(fieldName: string, value: any): IFilterFactory<T>;
    notEquals(fieldName: string, method: MethodCall): IFilterFactory<T>;
    notEquals(whereParams: WhereParams): IFilterFactory<T>;
    greaterThan(fieldName: string, value: any): IFilterFactory<T>;
    greaterThanOrEqual(fieldName: string, value: any): IFilterFactory<T>;
    lessThan(fieldName: string, value: any): IFilterFactory<T>;
    lessThanOrEqual(fieldName: string, value: any): IFilterFactory<T>;
    andAlso(): IFilterFactory<T>;
    orElse(): IFilterFactory<T>;
    not(): IFilterFactory<T>;
    openSubclause(): IFilterFactory<T>;
    closeSubclause(): IFilterFactory<T>;
}
