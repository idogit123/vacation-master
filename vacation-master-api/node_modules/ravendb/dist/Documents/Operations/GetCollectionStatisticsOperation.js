"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetCollectionStatisticsCommand = exports.GetCollectionStatisticsOperation = void 0;
const RavenCommand_1 = require("../../Http/RavenCommand");
const Serializer_1 = require("../../Mapping/Json/Serializer");
class GetCollectionStatisticsOperation {
    getCommand(conventions) {
        return new GetCollectionStatisticsCommand();
    }
    get resultType() {
        return "CommandResult";
    }
}
exports.GetCollectionStatisticsOperation = GetCollectionStatisticsOperation;
class GetCollectionStatisticsCommand extends RavenCommand_1.RavenCommand {
    constructor() {
        super();
    }
    get isReadRequest() {
        return true;
    }
    createRequest(node) {
        const uri = node.url + "/databases/" + node.database + "/collections/stats";
        return { uri };
    }
    get _serializer() {
        return Serializer_1.JsonSerializer.getDefault();
    }
    async setResponseAsync(bodyStream, fromCache) {
        if (!bodyStream) {
            this._throwInvalidResponse();
        }
        let body = null;
        this.result = await this._defaultPipeline(_ => body = _)
            .collectBody()
            .objectKeysTransform({
            defaultTransform: "camel",
            ignorePaths: [/^collections\./i]
        })
            .process(bodyStream);
        return body;
    }
}
exports.GetCollectionStatisticsCommand = GetCollectionStatisticsCommand;
//# sourceMappingURL=GetCollectionStatisticsOperation.js.map