"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetPeriodicBackupStatusOperation = void 0;
const RavenCommand_1 = require("../../../Http/RavenCommand");
class GetPeriodicBackupStatusOperation {
    constructor(taskId) {
        this._taskId = taskId;
    }
    get resultType() {
        return "CommandResult";
    }
    getCommand(conventions) {
        return new GetPeriodicBackupStatusCommand(this._taskId, conventions);
    }
}
exports.GetPeriodicBackupStatusOperation = GetPeriodicBackupStatusOperation;
class GetPeriodicBackupStatusCommand extends RavenCommand_1.RavenCommand {
    constructor(taskId, conventions) {
        super();
        this._taskId = taskId;
        this._conventions = conventions;
    }
    createRequest(node) {
        const uri = node.url + "/periodic-backup/status?name=" + node.database + "&taskId=" + this._taskId;
        return {
            method: "GET",
            uri
        };
    }
    get isReadRequest() {
        return true;
    }
    async setResponseAsync(bodyStream, fromCache) {
        if (!bodyStream) {
            this._throwInvalidResponse();
        }
        let body = null;
        const results = await this._defaultPipeline(_ => body = _)
            .process(bodyStream);
        this.result = this._reviveResultTypes(results, this._conventions, {
            nestedTypes: {
                "status.lastFullBackup": "date",
                "status.delayUntil": "date",
                "status.originalBackupTime": "date",
                "status.lastIncrementalBackup": "date",
                "status.lastFullBackupInternal": "date",
                "status.lastIncrementalBackupInternal": "date",
                "status.localBackup.lastIncrementalBackup": "date",
                "status.localBackup.lastFullBackup": "date",
                "status.nextBackup.dateTime": "date",
                "status.nextBackup.originalBackupTime": "date",
                "status.onGoingBackup.startTime": "date",
                "status.error.at": "date"
            }
        });
        return body;
    }
}
//# sourceMappingURL=GetPeriodicBackupStatusOperation.js.map