"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ModifyDatabaseTopologyOperation = void 0;
const Exceptions_1 = require("../../Exceptions");
const RavenCommand_1 = require("../../Http/RavenCommand");
const RaftIdGenerator_1 = require("../../Utility/RaftIdGenerator");
class ModifyDatabaseTopologyOperation {
    constructor(databaseName, databaseTopology) {
        if (!databaseTopology) {
            (0, Exceptions_1.throwError)("InvalidArgumentException", "DatabaseTopology cannot be null");
        }
        this._databaseTopology = databaseTopology;
        this._databaseName = databaseName;
    }
    get resultType() {
        return "CommandResult";
    }
    getCommand(conventions) {
        return new ModifyDatabaseTopologyCommand(this._databaseName, this._databaseTopology);
    }
}
exports.ModifyDatabaseTopologyOperation = ModifyDatabaseTopologyOperation;
class ModifyDatabaseTopologyCommand extends RavenCommand_1.RavenCommand {
    constructor(databaseName, databaseTopology) {
        super();
        if (!databaseTopology) {
            (0, Exceptions_1.throwError)("InvalidArgumentException", "DatabaseTopology cannot be null");
        }
        this._databaseTopology = databaseTopology;
        this._databaseName = databaseName;
    }
    createRequest(node) {
        const uri = node.url + "/admin/databases/topology/modify?name=" + this._databaseName;
        const body = this._serializer.serialize(this._databaseTopology);
        return {
            uri,
            method: "POST",
            body,
            headers: this._headers().typeAppJson().build(),
        };
    }
    get isReadRequest() {
        return false;
    }
    getRaftUniqueRequestId() {
        return RaftIdGenerator_1.RaftIdGenerator.newId();
    }
    async setResponseAsync(bodyStream, fromCache) {
        let body = null;
        this.result = await this._defaultPipeline(_ => body = _)
            .process(bodyStream);
        return body;
    }
}
//# sourceMappingURL=ModifyDatabaseTopologyOperation.js.map